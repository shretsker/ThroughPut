from weaviate.classes.config import Property, DataType, Tokenization, Configure

SCHEMA = {
    "classes": [
        {
            "class": "RawProductData",
            "description": "Initial raw data for a product",
            "properties": [
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="raw_data",
                    description="The full raw data for the product",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
            ],
        },
        {
            "class": "ProductSearchResult",
            "description": "Search results for a product",
            "properties": [
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="search_query",
                    description="The query used for this search",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="search_result",
                    description="The full search result",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="data_source",
                    description="The source of the search result",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
            ],
        },
        {
            "class": "ProductDataChunk",
            "description": "Chunked data for a product",
            "properties": [
                Property(
                    name="chunk_text",
                    description="The text content of the chunk",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="source_type",
                    description="The type of source this chunk came from (raw_data or search_result)",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="source_id",
                    description="The ID of the source (either RawProductData or ProductSearchResult)",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",
            ),
            "generative_config": Configure.Generative.openai(),
        },
        {
            "class": "Product",
            "description": "A class representing hardware products with enhanced sorting capabilities.",
            "properties": [
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    index_sortable=True,
                ),
                Property(
                    name="name",
                    description="The official name of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="manufacturer",
                    description="The company that produces the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="form_factor",
                    description="The physical dimensions or standard of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="evaluation_or_commercialization",
                    description="Indicates if the product is for evaluation or commercial use.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="processor_architecture",
                    description="The architecture of the processor.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="processor_core_count",
                    description="The number of cores in the processor.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    index_sortable=True,
                ),
                Property(
                    name="processor_manufacturer",
                    description="The company that manufactures the processor.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="processor_tdp",
                    description="The Thermal Design Power of the processor.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    index_sortable=True,
                ),
                Property(
                    name="memory",
                    description="The size and type of RAM in the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    index_sortable=True,
                ),
                Property(
                    name="onboard_storage",
                    description="The amount and type of built-in storage.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="input_voltage",
                    description="The required input voltage for operation.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="io_count",
                    description="The count and types of Input/Output interfaces.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="wireless",
                    description="Wireless capabilities of the product.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="operating_system_bsp",
                    description="Supported operating systems or Board Support Packages.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="operating_temperature_max",
                    description="The maximum operating temperature.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="operating_temperature_min",
                    description="The minimum operating temperature.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="certifications",
                    description="Certifications and compliance standards met.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="short_summary",
                    description="A concise description highlighting key features.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="full_summary",
                    description="A detailed overview of the product's capabilities.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="full_product_description",
                    description="An in-depth description including specifications.",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="target_applications",
                    description="Intended use cases or industries for the product.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="duplicate_ids",
                    description="IDs of duplicate or related products.",
                    data_type=DataType.TEXT_ARRAY,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="price",
                    description="The cost of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="stock_availability",
                    description="Current stock status (e.g., In Stock, Out of Stock).",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="lead_time",
                    description="Time required to fulfill an order.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",  # Consider using a more recent and powerful model
            ),
            "generative_config": Configure.Generative.openai(),
        },
        {
            "class": "Route",
            "description": "A class representing a route with multiple descriptive aspects.",
            "properties": [
                Property(
                    name="route",
                    description="The route to follow",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="description",
                    description="Route description capturing different aspects of the route",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",
            ),
            "generative_config": Configure.Generative.openai(),
        },
    ]
}
